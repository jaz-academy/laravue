/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

/// <reference types="unplugin-vue-router/client" />

import type {
  // type safe route locations
  RouteLocationTypedList,
  RouteLocationResolvedTypedList,
  RouteLocationNormalizedTypedList,
  RouteLocationNormalizedLoadedTypedList,
  RouteLocationAsString,
  RouteLocationAsRelativeTypedList,
  RouteLocationAsPathTypedList,

  // helper types
  // route definitions
  RouteRecordInfo,
  ParamValue,
  ParamValueOneOrMore,
  ParamValueZeroOrMore,
  ParamValueZeroOrOne,

  // vue-router extensions
  _RouterTyped,
  RouterLinkTyped,
  RouterLinkPropsTyped,
  NavigationGuard,
  UseLinkFnTyped,

  // data fetching
  _DataLoader,
  _DefineLoaderOptions,
} from 'unplugin-vue-router/types'

declare module 'vue-router/auto/routes' {
  export interface RouteNamedMap {
    '$error': RouteRecordInfo<'$error', '/:error(.*)', { error: ParamValue<true> }, { error: ParamValue<false> }>,
    'academy-assessment-competence': RouteRecordInfo<'academy-assessment-competence', '/academy/assessment/competence', Record<never, never>, Record<never, never>>,
    'academy-assessment-details-id': RouteRecordInfo<'academy-assessment-details-id', '/academy/assessment/details/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'academy-assessment-report-id': RouteRecordInfo<'academy-assessment-report-id', '/academy/assessment/report/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'academy-assessment-scores': RouteRecordInfo<'academy-assessment-scores', '/academy/assessment/scores', Record<never, never>, Record<never, never>>,
    'academy-assessment-scores-edit-id': RouteRecordInfo<'academy-assessment-scores-edit-id', '/academy/assessment/scores/edit/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'academy-assessment-subject': RouteRecordInfo<'academy-assessment-subject', '/academy/assessment/subject', Record<never, never>, Record<never, never>>,
    'academy-awards': RouteRecordInfo<'academy-awards', '/academy/awards', Record<never, never>, Record<never, never>>,
    'academy-calendar': RouteRecordInfo<'academy-calendar', '/academy/calendar', Record<never, never>, Record<never, never>>,
    'academy-course-details': RouteRecordInfo<'academy-course-details', '/academy/course/details', Record<never, never>, Record<never, never>>,
    'academy-course-list': RouteRecordInfo<'academy-course-list', '/academy/course/list', Record<never, never>, Record<never, never>>,
    'academy-dashboard': RouteRecordInfo<'academy-dashboard', '/academy/dashboard', Record<never, never>, Record<never, never>>,
    'academy-product-add': RouteRecordInfo<'academy-product-add', '/academy/product/add', Record<never, never>, Record<never, never>>,
    'academy-product-courses': RouteRecordInfo<'academy-product-courses', '/academy/product/courses', Record<never, never>, Record<never, never>>,
    'academy-product-list': RouteRecordInfo<'academy-product-list', '/academy/product/list', Record<never, never>, Record<never, never>>,
    'academy-project-plans': RouteRecordInfo<'academy-project-plans', '/academy/project/plans', Record<never, never>, Record<never, never>>,
    'academy-project-tasks': RouteRecordInfo<'academy-project-tasks', '/academy/project/tasks', Record<never, never>, Record<never, never>>,
    'access-control': RouteRecordInfo<'access-control', '/access-control', Record<never, never>, Record<never, never>>,
    'apps-chat': RouteRecordInfo<'apps-chat', '/apps/chat', Record<never, never>, Record<never, never>>,
    'apps-ecommerce-manage-review': RouteRecordInfo<'apps-ecommerce-manage-review', '/apps/ecommerce/manage-review', Record<never, never>, Record<never, never>>,
    'apps-ecommerce-order-details-id': RouteRecordInfo<'apps-ecommerce-order-details-id', '/apps/ecommerce/order/details/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'apps-ecommerce-order-list': RouteRecordInfo<'apps-ecommerce-order-list', '/apps/ecommerce/order/list', Record<never, never>, Record<never, never>>,
    'apps-ecommerce-referrals': RouteRecordInfo<'apps-ecommerce-referrals', '/apps/ecommerce/referrals', Record<never, never>, Record<never, never>>,
    'apps-ecommerce-settings': RouteRecordInfo<'apps-ecommerce-settings', '/apps/ecommerce/settings', Record<never, never>, Record<never, never>>,
    'apps-email': RouteRecordInfo<'apps-email', '/apps/email', Record<never, never>, Record<never, never>>,
    'apps-logistics-dashboard': RouteRecordInfo<'apps-logistics-dashboard', '/apps/logistics/dashboard', Record<never, never>, Record<never, never>>,
    'apps-logistics-fleet': RouteRecordInfo<'apps-logistics-fleet', '/apps/logistics/fleet', Record<never, never>, Record<never, never>>,
    'apps-permissions': RouteRecordInfo<'apps-permissions', '/apps/permissions', Record<never, never>, Record<never, never>>,
    'apps-roles': RouteRecordInfo<'apps-roles', '/apps/roles', Record<never, never>, Record<never, never>>,
    'apps-user-view-id': RouteRecordInfo<'apps-user-view-id', '/apps/user/view/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'apps-email-filter': RouteRecordInfo<'apps-email-filter', '/apps/email/:filter', { filter: ParamValue<true> }, { filter: ParamValue<false> }>,
    'apps-email-label': RouteRecordInfo<'apps-email-label', '/apps/email/:label', { label: ParamValue<true> }, { label: ParamValue<false> }>,
    'charts-apex-chart': RouteRecordInfo<'charts-apex-chart', '/charts/apex-chart', Record<never, never>, Record<never, never>>,
    'charts-chartjs': RouteRecordInfo<'charts-chartjs', '/charts/chartjs', Record<never, never>, Record<never, never>>,
    'components-alert': RouteRecordInfo<'components-alert', '/components/alert', Record<never, never>, Record<never, never>>,
    'components-avatar': RouteRecordInfo<'components-avatar', '/components/avatar', Record<never, never>, Record<never, never>>,
    'components-badge': RouteRecordInfo<'components-badge', '/components/badge', Record<never, never>, Record<never, never>>,
    'components-button': RouteRecordInfo<'components-button', '/components/button', Record<never, never>, Record<never, never>>,
    'components-chip': RouteRecordInfo<'components-chip', '/components/chip', Record<never, never>, Record<never, never>>,
    'components-dialog': RouteRecordInfo<'components-dialog', '/components/dialog', Record<never, never>, Record<never, never>>,
    'components-expansion-panel': RouteRecordInfo<'components-expansion-panel', '/components/expansion-panel', Record<never, never>, Record<never, never>>,
    'components-list': RouteRecordInfo<'components-list', '/components/list', Record<never, never>, Record<never, never>>,
    'components-menu': RouteRecordInfo<'components-menu', '/components/menu', Record<never, never>, Record<never, never>>,
    'components-pagination': RouteRecordInfo<'components-pagination', '/components/pagination', Record<never, never>, Record<never, never>>,
    'components-progress-circular': RouteRecordInfo<'components-progress-circular', '/components/progress-circular', Record<never, never>, Record<never, never>>,
    'components-progress-linear': RouteRecordInfo<'components-progress-linear', '/components/progress-linear', Record<never, never>, Record<never, never>>,
    'components-snackbar': RouteRecordInfo<'components-snackbar', '/components/snackbar', Record<never, never>, Record<never, never>>,
    'components-tabs': RouteRecordInfo<'components-tabs', '/components/tabs', Record<never, never>, Record<never, never>>,
    'components-timeline': RouteRecordInfo<'components-timeline', '/components/timeline', Record<never, never>, Record<never, never>>,
    'components-tooltip': RouteRecordInfo<'components-tooltip', '/components/tooltip', Record<never, never>, Record<never, never>>,
    'dashboards-analytics': RouteRecordInfo<'dashboards-analytics', '/dashboards/analytics', Record<never, never>, Record<never, never>>,
    'dashboards-crm': RouteRecordInfo<'dashboards-crm', '/dashboards/crm', Record<never, never>, Record<never, never>>,
    'dashboards-ecommerce': RouteRecordInfo<'dashboards-ecommerce', '/dashboards/ecommerce', Record<never, never>, Record<never, never>>,
    'extensions-swiper': RouteRecordInfo<'extensions-swiper', '/extensions/swiper', Record<never, never>, Record<never, never>>,
    'extensions-tour': RouteRecordInfo<'extensions-tour', '/extensions/tour', Record<never, never>, Record<never, never>>,
    'financial-finance': RouteRecordInfo<'financial-finance', '/financial/finance', Record<never, never>, Record<never, never>>,
    'financial-finance-account': RouteRecordInfo<'financial-finance-account', '/financial/finance/account', Record<never, never>, Record<never, never>>,
    'financial-finance-billing': RouteRecordInfo<'financial-finance-billing', '/financial/finance/billing', Record<never, never>, Record<never, never>>,
    'financial-finance-discount': RouteRecordInfo<'financial-finance-discount', '/financial/finance/discount', Record<never, never>, Record<never, never>>,
    'financial-finance-edit-id': RouteRecordInfo<'financial-finance-edit-id', '/financial/finance/edit/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'financial-finance-preview-id': RouteRecordInfo<'financial-finance-preview-id', '/financial/finance/preview/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'financial-payment-add': RouteRecordInfo<'financial-payment-add', '/financial/payment/add', Record<never, never>, Record<never, never>>,
    'financial-payment-edit-id': RouteRecordInfo<'financial-payment-edit-id', '/financial/payment/edit/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'financial-payment-list': RouteRecordInfo<'financial-payment-list', '/financial/payment/list', Record<never, never>, Record<never, never>>,
    'financial-payment-preview-id': RouteRecordInfo<'financial-payment-preview-id', '/financial/payment/preview/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'financial-payment-recap-id': RouteRecordInfo<'financial-payment-recap-id', '/financial/payment/recap/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'financial-savings': RouteRecordInfo<'financial-savings', '/financial/savings', Record<never, never>, Record<never, never>>,
    'forgot-password': RouteRecordInfo<'forgot-password', '/forgot-password', Record<never, never>, Record<never, never>>,
    'forms-autocomplete': RouteRecordInfo<'forms-autocomplete', '/forms/autocomplete', Record<never, never>, Record<never, never>>,
    'forms-checkbox': RouteRecordInfo<'forms-checkbox', '/forms/checkbox', Record<never, never>, Record<never, never>>,
    'forms-combobox': RouteRecordInfo<'forms-combobox', '/forms/combobox', Record<never, never>, Record<never, never>>,
    'forms-custom-input': RouteRecordInfo<'forms-custom-input', '/forms/custom-input', Record<never, never>, Record<never, never>>,
    'forms-date-time-picker': RouteRecordInfo<'forms-date-time-picker', '/forms/date-time-picker', Record<never, never>, Record<never, never>>,
    'forms-editors': RouteRecordInfo<'forms-editors', '/forms/editors', Record<never, never>, Record<never, never>>,
    'forms-file-input': RouteRecordInfo<'forms-file-input', '/forms/file-input', Record<never, never>, Record<never, never>>,
    'forms-form-layouts': RouteRecordInfo<'forms-form-layouts', '/forms/form-layouts', Record<never, never>, Record<never, never>>,
    'forms-form-validation': RouteRecordInfo<'forms-form-validation', '/forms/form-validation', Record<never, never>, Record<never, never>>,
    'forms-form-wizard-icons': RouteRecordInfo<'forms-form-wizard-icons', '/forms/form-wizard-icons', Record<never, never>, Record<never, never>>,
    'forms-form-wizard-numbered': RouteRecordInfo<'forms-form-wizard-numbered', '/forms/form-wizard-numbered', Record<never, never>, Record<never, never>>,
    'forms-radio': RouteRecordInfo<'forms-radio', '/forms/radio', Record<never, never>, Record<never, never>>,
    'forms-range-slider': RouteRecordInfo<'forms-range-slider', '/forms/range-slider', Record<never, never>, Record<never, never>>,
    'forms-rating': RouteRecordInfo<'forms-rating', '/forms/rating', Record<never, never>, Record<never, never>>,
    'forms-select': RouteRecordInfo<'forms-select', '/forms/select', Record<never, never>, Record<never, never>>,
    'forms-slider': RouteRecordInfo<'forms-slider', '/forms/slider', Record<never, never>, Record<never, never>>,
    'forms-switch': RouteRecordInfo<'forms-switch', '/forms/switch', Record<never, never>, Record<never, never>>,
    'forms-textarea': RouteRecordInfo<'forms-textarea', '/forms/textarea', Record<never, never>, Record<never, never>>,
    'forms-textfield': RouteRecordInfo<'forms-textfield', '/forms/textfield', Record<never, never>, Record<never, never>>,
    'front-pages-checkout': RouteRecordInfo<'front-pages-checkout', '/front-pages/checkout', Record<never, never>, Record<never, never>>,
    'front-pages-help-center': RouteRecordInfo<'front-pages-help-center', '/front-pages/help-center', Record<never, never>, Record<never, never>>,
    'front-pages-help-center-article-title': RouteRecordInfo<'front-pages-help-center-article-title', '/front-pages/help-center/article/:title', { title: ParamValue<true> }, { title: ParamValue<false> }>,
    'front-pages-landing-page': RouteRecordInfo<'front-pages-landing-page', '/front-pages/landing-page', Record<never, never>, Record<never, never>>,
    'front-pages-payment': RouteRecordInfo<'front-pages-payment', '/front-pages/payment', Record<never, never>, Record<never, never>>,
    'front-pages-pricing': RouteRecordInfo<'front-pages-pricing', '/front-pages/pricing', Record<never, never>, Record<never, never>>,
    'login': RouteRecordInfo<'login', '/login', Record<never, never>, Record<never, never>>,
    'not-authorized': RouteRecordInfo<'not-authorized', '/not-authorized', Record<never, never>, Record<never, never>>,
    'pages-authentication-forgot-password-v1': RouteRecordInfo<'pages-authentication-forgot-password-v1', '/pages/authentication/forgot-password-v1', Record<never, never>, Record<never, never>>,
    'pages-authentication-forgot-password-v2': RouteRecordInfo<'pages-authentication-forgot-password-v2', '/pages/authentication/forgot-password-v2', Record<never, never>, Record<never, never>>,
    'pages-authentication-login-v1': RouteRecordInfo<'pages-authentication-login-v1', '/pages/authentication/login-v1', Record<never, never>, Record<never, never>>,
    'pages-authentication-login-v2': RouteRecordInfo<'pages-authentication-login-v2', '/pages/authentication/login-v2', Record<never, never>, Record<never, never>>,
    'pages-authentication-register-multi-steps': RouteRecordInfo<'pages-authentication-register-multi-steps', '/pages/authentication/register-multi-steps', Record<never, never>, Record<never, never>>,
    'pages-authentication-register-v1': RouteRecordInfo<'pages-authentication-register-v1', '/pages/authentication/register-v1', Record<never, never>, Record<never, never>>,
    'pages-authentication-register-v2': RouteRecordInfo<'pages-authentication-register-v2', '/pages/authentication/register-v2', Record<never, never>, Record<never, never>>,
    'pages-authentication-reset-password-v1': RouteRecordInfo<'pages-authentication-reset-password-v1', '/pages/authentication/reset-password-v1', Record<never, never>, Record<never, never>>,
    'pages-authentication-reset-password-v2': RouteRecordInfo<'pages-authentication-reset-password-v2', '/pages/authentication/reset-password-v2', Record<never, never>, Record<never, never>>,
    'pages-authentication-two-steps-v1': RouteRecordInfo<'pages-authentication-two-steps-v1', '/pages/authentication/two-steps-v1', Record<never, never>, Record<never, never>>,
    'pages-authentication-two-steps-v2': RouteRecordInfo<'pages-authentication-two-steps-v2', '/pages/authentication/two-steps-v2', Record<never, never>, Record<never, never>>,
    'pages-authentication-verify-email-v1': RouteRecordInfo<'pages-authentication-verify-email-v1', '/pages/authentication/verify-email-v1', Record<never, never>, Record<never, never>>,
    'pages-authentication-verify-email-v2': RouteRecordInfo<'pages-authentication-verify-email-v2', '/pages/authentication/verify-email-v2', Record<never, never>, Record<never, never>>,
    'pages-cards-card-actions': RouteRecordInfo<'pages-cards-card-actions', '/pages/cards/card-actions', Record<never, never>, Record<never, never>>,
    'pages-cards-card-advance': RouteRecordInfo<'pages-cards-card-advance', '/pages/cards/card-advance', Record<never, never>, Record<never, never>>,
    'pages-cards-card-basic': RouteRecordInfo<'pages-cards-card-basic', '/pages/cards/card-basic', Record<never, never>, Record<never, never>>,
    'pages-cards-card-statistics': RouteRecordInfo<'pages-cards-card-statistics', '/pages/cards/card-statistics', Record<never, never>, Record<never, never>>,
    'pages-cards-card-widgets': RouteRecordInfo<'pages-cards-card-widgets', '/pages/cards/card-widgets', Record<never, never>, Record<never, never>>,
    'pages-dialog-examples': RouteRecordInfo<'pages-dialog-examples', '/pages/dialog-examples', Record<never, never>, Record<never, never>>,
    'pages-faq': RouteRecordInfo<'pages-faq', '/pages/faq', Record<never, never>, Record<never, never>>,
    'pages-icons': RouteRecordInfo<'pages-icons', '/pages/icons', Record<never, never>, Record<never, never>>,
    'pages-misc-coming-soon': RouteRecordInfo<'pages-misc-coming-soon', '/pages/misc/coming-soon', Record<never, never>, Record<never, never>>,
    'pages-misc-under-maintenance': RouteRecordInfo<'pages-misc-under-maintenance', '/pages/misc/under-maintenance', Record<never, never>, Record<never, never>>,
    'pages-pricing': RouteRecordInfo<'pages-pricing', '/pages/pricing', Record<never, never>, Record<never, never>>,
    'pages-typography': RouteRecordInfo<'pages-typography', '/pages/typography', Record<never, never>, Record<never, never>>,
    'profile-school': RouteRecordInfo<'profile-school', '/profile/school', Record<never, never>, Record<never, never>>,
    'profile-student-detail-tab': RouteRecordInfo<'profile-student-detail-tab', '/profile/student/detail/:tab', { tab: ParamValue<true> }, { tab: ParamValue<false> }>,
    'profile-student-list': RouteRecordInfo<'profile-student-list', '/profile/student/list', Record<never, never>, Record<never, never>>,
    'profile-teacher-detail-tab': RouteRecordInfo<'profile-teacher-detail-tab', '/profile/teacher/detail/:tab', { tab: ParamValue<true> }, { tab: ParamValue<false> }>,
    'profile-teacher-list': RouteRecordInfo<'profile-teacher-list', '/profile/teacher/list', Record<never, never>, Record<never, never>>,
    'profile-user-tab': RouteRecordInfo<'profile-user-tab', '/profile/user/:tab', { tab: ParamValue<true> }, { tab: ParamValue<false> }>,
    'register': RouteRecordInfo<'register', '/register', Record<never, never>, Record<never, never>>,
    'tables-data-table': RouteRecordInfo<'tables-data-table', '/tables/data-table', Record<never, never>, Record<never, never>>,
    'tables-simple-table': RouteRecordInfo<'tables-simple-table', '/tables/simple-table', Record<never, never>, Record<never, never>>,
    'wizard-examples-checkout': RouteRecordInfo<'wizard-examples-checkout', '/wizard-examples/checkout', Record<never, never>, Record<never, never>>,
    'wizard-examples-create-deal': RouteRecordInfo<'wizard-examples-create-deal', '/wizard-examples/create-deal', Record<never, never>, Record<never, never>>,
    'wizard-examples-property-listing': RouteRecordInfo<'wizard-examples-property-listing', '/wizard-examples/property-listing', Record<never, never>, Record<never, never>>,
  }
}

declare module 'vue-router/auto' {
  import type { RouteNamedMap } from 'vue-router/auto/routes'

  export type RouterTyped = _RouterTyped<RouteNamedMap>

  /**
   * Type safe version of `RouteLocationNormalized` (the type of `to` and `from` in navigation guards).
   * Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationNormalized<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationNormalizedTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocationNormalizedLoaded` (the return type of `useRoute()`).
   * Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationNormalizedLoaded<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocationResolved` (the returned route of `router.resolve()`).
   * Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationResolved<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationResolvedTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocation` . Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocation<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocationRaw` . Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationRaw<Name extends keyof RouteNamedMap = keyof RouteNamedMap> =
    | RouteLocationAsString<RouteNamedMap>
    | RouteLocationAsRelativeTypedList<RouteNamedMap>[Name]
    | RouteLocationAsPathTypedList<RouteNamedMap>[Name]

  /**
   * Generate a type safe params for a route location. Requires the name of the route to be passed as a generic.
   */
  export type RouteParams<Name extends keyof RouteNamedMap> = RouteNamedMap[Name]['params']
  /**
   * Generate a type safe raw params for a route location. Requires the name of the route to be passed as a generic.
   */
  export type RouteParamsRaw<Name extends keyof RouteNamedMap> = RouteNamedMap[Name]['paramsRaw']

  export function useRouter(): RouterTyped
  export function useRoute<Name extends keyof RouteNamedMap = keyof RouteNamedMap>(name?: Name): RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[Name]

  export const useLink: UseLinkFnTyped<RouteNamedMap>

  export function onBeforeRouteLeave(guard: NavigationGuard<RouteNamedMap>): void
  export function onBeforeRouteUpdate(guard: NavigationGuard<RouteNamedMap>): void

  export const RouterLink: RouterLinkTyped<RouteNamedMap>
  export const RouterLinkProps: RouterLinkPropsTyped<RouteNamedMap>

  // Experimental Data Fetching

  export function defineLoader<
    P extends Promise<any>,
    Name extends keyof RouteNamedMap = keyof RouteNamedMap,
    isLazy extends boolean = false,
  >(
    name: Name,
    loader: (route: RouteLocationNormalizedLoaded<Name>) => P,
    options?: _DefineLoaderOptions<isLazy>,
  ): _DataLoader<Awaited<P>, isLazy>
  export function defineLoader<
    P extends Promise<any>,
    isLazy extends boolean = false,
  >(
    loader: (route: RouteLocationNormalizedLoaded) => P,
    options?: _DefineLoaderOptions<isLazy>,
  ): _DataLoader<Awaited<P>, isLazy>

  export {
    _definePage as definePage,
    _HasDataLoaderMeta as HasDataLoaderMeta,
    _setupDataFetchingGuard as setupDataFetchingGuard,
    _stopDataFetchingScope as stopDataFetchingScope,
  } from 'unplugin-vue-router/runtime'
}

declare module 'vue-router' {
  import type { RouteNamedMap } from 'vue-router/auto/routes'

  export interface TypesConfig {
    beforeRouteUpdate: NavigationGuard<RouteNamedMap>
    beforeRouteLeave: NavigationGuard<RouteNamedMap>

    $route: RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[keyof RouteNamedMap]
    $router: _RouterTyped<RouteNamedMap>

    RouterLink: RouterLinkTyped<RouteNamedMap>
  }
}
